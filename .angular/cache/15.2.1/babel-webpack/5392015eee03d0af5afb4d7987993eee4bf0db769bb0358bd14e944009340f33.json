{"ast":null,"code":"import { HttpEventType } from '@angular/common/http';\nimport { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nfunction UploadComponent_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.progress, \"% \");\n  }\n}\nfunction UploadComponent_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.message, \" \");\n  }\n}\nexport class UploadComponent {\n  constructor(http) {\n    this.http = http;\n    this.onUploadFinished = new EventEmitter();\n    this.uploadFile = files => {\n      if (files.length === 0) {\n        return;\n      }\n      let fileToUpload = files[0];\n      const formData = new FormData();\n      formData.append('file', fileToUpload, fileToUpload.name);\n      this.http.post('https://localhost:7058/api/Upload', formData, {\n        reportProgress: true,\n        observe: 'events'\n      }).subscribe({\n        next: event => {\n          if (event.type === HttpEventType.UploadProgress) this.progress = Math.round(100 * event.loaded / event.total);else if (event.type === HttpEventType.Response) {\n            this.message = 'Upload success.';\n            this.onUploadFinished.emit(event.body);\n          }\n        },\n        error: err => console.log(err)\n      });\n    };\n  }\n  ngOnInit() {}\n}\nUploadComponent.ɵfac = function UploadComponent_Factory(t) {\n  return new (t || UploadComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nUploadComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UploadComponent,\n  selectors: [[\"app-upload\"]],\n  outputs: {\n    onUploadFinished: \"onUploadFinished\"\n  },\n  decls: 9,\n  vars: 2,\n  consts: [[1, \"row\", 2, \"margin-bottom\", \"15px\"], [1, \"col-md-3\"], [\"type\", \"file\", \"placeholder\", \"Choose file\", \"multiple\", \"\", 2, \"display\", \"none\", 3, \"change\"], [\"file\", \"\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", 3, \"click\"], [1, \"col-md-4\"], [\"class\", \"upload\", 4, \"ngIf\"], [1, \"upload\"]],\n  template: function UploadComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r3 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"input\", 2, 3);\n      i0.ɵɵlistener(\"change\", function UploadComponent_Template_input_change_2_listener() {\n        i0.ɵɵrestoreView(_r3);\n        const _r0 = i0.ɵɵreference(3);\n        return i0.ɵɵresetView(ctx.uploadFile(_r0.files));\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function UploadComponent_Template_button_click_4_listener() {\n        i0.ɵɵrestoreView(_r3);\n        const _r0 = i0.ɵɵreference(3);\n        return i0.ɵɵresetView(_r0.click());\n      });\n      i0.ɵɵtext(5, \"Profile Picture\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"div\", 5);\n      i0.ɵɵtemplate(7, UploadComponent_span_7_Template, 2, 1, \"span\", 6);\n      i0.ɵɵtemplate(8, UploadComponent_span_8_Template, 2, 1, \"span\", 6);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ctx.progress > 0);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.message);\n    }\n  },\n  dependencies: [i2.NgIf],\n  styles: [\".upload[_ngcontent-%COMP%] {\\n  font-weight: bold;\\n  color: #28a745;\\n  margin-left: 15px;\\n  line-height: 36px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy91cGxvYWQvdXBsb2FkLmNvbXBvbmVudC5zY3NzIiwid2VicGFjazovLy4vLi4vLi4vTmV3JTIwZm9sZGVyL0luZGlhd2lzaEZyb250ZW5kL3NyYy9hcHAvY29tcG9uZW50cy91cGxvYWQvdXBsb2FkLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksaUJBQUE7RUFDQSxjQUFBO0VBQ0EsaUJBQUE7RUFDQSxpQkFBQTtBQ0NKIiwic291cmNlc0NvbnRlbnQiOlsiLnVwbG9hZHtcclxuICAgIGZvbnQtd2VpZ2h0OmJvbGQ7XHJcbiAgICBjb2xvcjojMjhhNzQ1O1xyXG4gICAgbWFyZ2luLWxlZnQ6IDE1cHg7XHJcbiAgICBsaW5lLWhlaWdodDogMzZweDtcclxuICB9IiwiLnVwbG9hZCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBjb2xvcjogIzI4YTc0NTtcbiAgbWFyZ2luLWxlZnQ6IDE1cHg7XG4gIGxpbmUtaGVpZ2h0OiAzNnB4O1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,aAAa,QAA2B,sBAAsB;AACnF,SAAoBC,YAAY,QAAwB,eAAe;;;;;;ICKjEC,+BAA0C;IACxCA,YACF;IAAAA,iBAAO;;;;IADLA,eACF;IADEA,iDACF;;;;;IACAA,+BAAqC;IACnCA,YACF;IAAAA,iBAAO;;;;IADLA,eACF;IADEA,+CACF;;;ADHN,OAAM,MAAOC,eAAe;EAK1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFP,qBAAgB,GAAG,IAAIJ,YAAY,EAAE;IAOtD,eAAU,GAAIK,KAAS,IAAI;MACzB,IAAIA,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;QACtB;;MAGF,IAAIC,YAAY,GAASF,KAAK,CAAC,CAAC,CAAC;MACjC,MAAMG,QAAQ,GAAG,IAAIC,QAAQ,EAAE;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,YAAY,EAAEA,YAAY,CAACI,IAAI,CAAC;MAExD,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAC,mCAAmC,EAAEJ,QAAQ,EAAE;QAACK,cAAc,EAAE,IAAI;QAAEC,OAAO,EAAE;MAAQ,CAAC,CAAC,CACrGC,SAAS,CAAC;QACTC,IAAI,EAAGC,KAAK,IAAI;UAChB,IAAIA,KAAK,CAACC,IAAI,KAAKnB,aAAa,CAACoB,cAAc,EAC7C,IAAI,CAACC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAAC,GAAG,GAAGL,KAAK,CAACM,MAAM,GAAGN,KAAK,CAACO,KAAM,CAAC,CAAC,KAC3D,IAAIP,KAAK,CAACC,IAAI,KAAKnB,aAAa,CAAC0B,QAAQ,EAAE;YAC9C,IAAI,CAACC,OAAO,GAAG,iBAAiB;YAChC,IAAI,CAACC,gBAAgB,CAACC,IAAI,CAACX,KAAK,CAACY,IAAI,CAAC;;QAE1C,CAAC;QACDC,KAAK,EAAGC,GAAsB,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG;OACnD,CAAC;IACJ,CAAC;EA1BuC;EAExCG,QAAQ,IACR;;AARWhC,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAiC;EAAAC;IAAAT;EAAA;EAAAU;EAAAC;EAAAC;EAAAC;IAAA;;MCR5BvC,8BAA6C;MAEYA;QAAAA;QAAA;QAAA,OAAUA,wCAAsB;MAAA,EAAC;MAApFA,iBAAoH;MACpHA,iCAAqE;MAAvBA;QAAAA;QAAA;QAAA,OAASA,0BAAY;MAAA,EAAC;MAACA,+BAAe;MAAAA,iBAAS;MAE/FA,8BAAsB;MACpBA,kEAEO;MACPA,kEAEO;MACTA,iBAAM;;;MANkBA,eAAkB;MAAlBA,uCAAkB;MAGlBA,eAAa;MAAbA,kCAAa","names":["HttpEventType","EventEmitter","i0","UploadComponent","constructor","http","files","length","fileToUpload","formData","FormData","append","name","post","reportProgress","observe","subscribe","next","event","type","UploadProgress","progress","Math","round","loaded","total","Response","message","onUploadFinished","emit","body","error","err","console","log","ngOnInit","selectors","outputs","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\New folder\\IndiawishFrontend\\src\\app\\components\\upload\\upload.component.ts","D:\\New folder\\IndiawishFrontend\\src\\app\\components\\upload\\upload.component.html"],"sourcesContent":["import { HttpClient, HttpEventType, HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-upload',\r\n  templateUrl: './upload.component.html',\r\n  styleUrls: ['./upload.component.scss']\r\n})\r\nexport class UploadComponent implements OnInit {\r\n  progress!: number;\r\n  message!: string;\r\n  @Output() public onUploadFinished = new EventEmitter();\r\n  \r\n  constructor(private http: HttpClient) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  uploadFile = (files:any) => {\r\n    if (files.length === 0) {\r\n      return;\r\n    }\r\n\r\n    let fileToUpload = <File>files[0];\r\n    const formData = new FormData();\r\n    formData.append('file', fileToUpload, fileToUpload.name);\r\n    \r\n    this.http.post('https://localhost:7058/api/Upload', formData, {reportProgress: true, observe: 'events'})\r\n      .subscribe({\r\n        next: (event) => {\r\n        if (event.type === HttpEventType.UploadProgress)\r\n          this.progress = Math.round(100 * event.loaded / event.total!);\r\n        else if (event.type === HttpEventType.Response) {\r\n          this.message = 'Upload success.';\r\n          this.onUploadFinished.emit(event.body);\r\n        }\r\n      },\r\n      error: (err: HttpErrorResponse) => console.log(err)\r\n    });\r\n  }\r\n}\r\n","<div class=\"row\" style=\"margin-bottom:15px;\">\n    <div class=\"col-md-3\">\n      <input type=\"file\" #file placeholder=\"Choose file\" (change)=\"uploadFile(file.files)\" style=\"display:none;\" multiple>\n      <button type=\"button\" class=\"btn btn-success\" (click)=\"file.click()\">Profile Picture</button>\n    </div>\n    <div class=\"col-md-4\">\n      <span class=\"upload\" *ngIf=\"progress > 0\">\n        {{progress}}%\n      </span>\n      <span class=\"upload\" *ngIf=\"message\">\n        {{message}}\n      </span>\n    </div>\n  </div>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}