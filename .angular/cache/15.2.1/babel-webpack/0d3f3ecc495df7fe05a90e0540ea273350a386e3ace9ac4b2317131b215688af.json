{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport ValidateForm from 'src/app/helpers/validateform';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"ng-angular-popup\";\nimport * as i3 from \"./../../services/auth.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"./../../services/user-store.service\";\nimport * as i6 from \"src/app/services/reset-password.service\";\nimport * as i7 from \"@angular/common\";\nfunction LoginComponent_small_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 42);\n    i0.ɵɵtext(1, \"*Username is required*\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_small_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 42);\n    i0.ɵɵtext(1, \"*Password is required*\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_small_55_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 42);\n    i0.ɵɵtext(1, \"*Email is required*\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_small_56_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 42);\n    i0.ɵɵtext(1, \"*Email is invalid*\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginComponent {\n  constructor(fb, toast, auth, router, userStore, resetPasswordService) {\n    this.fb = fb;\n    this.toast = toast;\n    this.auth = auth;\n    this.router = router;\n    this.userStore = userStore;\n    this.resetPasswordService = resetPasswordService;\n    this.type = 'password';\n    this.isText = false;\n    this.eyeIcon = 'fa-eye-slash';\n  }\n  ngOnInit() {\n    this.loginForm = this.fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n    localStorage.removeItem('token');\n  }\n  hideShowPass() {\n    this.isText = !this.isText;\n    this.isText ? this.eyeIcon = 'fa-eye' : this.eyeIcon = 'fa-eye-slash';\n    this.isText ? this.type = 'text' : this.type = 'password';\n  }\n  onSubmit() {\n    if (this.loginForm.valid) {\n      console.log(this.loginForm.value);\n      this.auth.signIn(this.loginForm.value).subscribe({\n        next: res => {\n          console.log(res);\n          this.loginForm.reset();\n          this.router.navigate(['dashboard']);\n          this.toast.success({\n            detail: 'Success',\n            summary: 'Login Success',\n            duration: 5000\n          });\n          this.auth.storeToken(res.accessToken);\n          this.auth.storeRefreshToken(res.refreshToken);\n          let decodedValue = this.auth.decodedToken();\n          this.userStore.storeFullName(decodedValue.name);\n          this.userStore.storeRole(decodedValue.role);\n        }\n      });\n    } else {\n      this.toast.error({\n        detail: 'ERROR',\n        summary: 'Please fill all details',\n        duration: 5000\n      });\n      ValidateForm.validateAllFormFields(this.loginForm);\n    }\n  }\n  checkValidEmail(event) {\n    const value = event;\n    const pattern = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\n    this.isValidEmail = pattern.test(value);\n    return this.isValidEmail;\n  }\n  confirmToReset() {\n    if (this.checkValidEmail(this.resetPasswordEmail)) {\n      this.resetPasswordService.sendResetPasswordLink(this.resetPasswordEmail).subscribe({\n        next: res => {\n          const buttonRef = document.getElementById(\"closeBtn\");\n          buttonRef?.click();\n        },\n        error: err => {\n          this.toast.error({\n            detail: 'ERROR',\n            summary: 'Something went wrong!',\n            duration: 5000\n          });\n        }\n      });\n    }\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.NgToastService), i0.ɵɵdirectiveInject(i3.AuthService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i5.UserStoreService), i0.ɵɵdirectiveInject(i6.ResetPasswordService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 62,\n  vars: 15,\n  consts: [[1, \"outer\"], [1, \"container\"], [1, \"row\"], [1, \"offset-md-2\", \"col-lg-5\", \"col-md-7\", \"offset-lg-4\", \"offset-md-3\"], [1, \"panel\", \"border\", \"bg-white\"], [1, \"panel-heading\"], [1, \"pt-3\", \"font-weight-bold\"], [1, \"panel-body\", \"p-3\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", \"pt-3\"], [1, \"input-field\"], [1, \"fa\", \"fa-user\", \"p-2\"], [\"formControlName\", \"username\", \"type\", \"text\", \"placeholder\", \"Username\", \"required\", \"\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"fa\", \"fa-lock\", \"px-2\"], [\"formControlName\", \"password\", \"placeholder\", \"Password\", 3, \"type\"], [\"type\", \"button\", 1, \"bg-white\", \"text-muted\", 3, \"click\"], [1, \"form-inline\", \"fr\", \"mt-4\"], [\"id\", \"forgot\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#forget-password\", 1, \"font-weight-bold\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-block\", \"mt-4\", \"w-100\"], [1, \"text-center\", \"pt-4\", \"text-muted\"], [\"id\", \"forgot\", \"href\", \"#\", \"routerLink\", \"/signup\"], [1, \"mx-3\", \"my-2\", \"py-2\", \"bordert\"], [1, \"text-center\", \"py-3\"], [\"href\", \"https://wwww.facebook.com\", \"target\", \"_blank\", 1, \"px-2\"], [\"src\", \"https://www.dpreview.com/files/p/articles/4698742202/facebook.jpeg\", \"alt\", \"\"], [\"href\", \"https://www.google.com\", \"target\", \"_blank\", 1, \"px-2\"], [\"src\", \"https://www.freepnglogos.com/uploads/google-logo-png/google-logo-png-suite-everything-you-need-know-about-google-newest-0.png\", \"alt\", \"\"], [\"href\", \"https://www.github.com\", \"target\", \"_blank\", 1, \"px-2\"], [\"src\", \"https://www.freepnglogos.com/uploads/512x512-logo-png/512x512-logo-github-icon-35.png\", \"alt\", \"\"], [\"id\", \"forget-password\", \"tabindex\", \"-1\", \"aria-labelledby\", \"reset-passwordLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"forget-passwordLabel\", 1, \"modal-title\"], [2, \"font-size\", \"25px\", \"font-weight\", \"700\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\"], [1, \"modal-body\"], [\"type\", \"text\", \"placeholder\", \"Email\", 3, \"ngModel\", \"ngModelChange\"], [1, \"modal-footer\"], [\"type\", \"button\", \"id\", \"closeBtn\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"], [1, \"text-danger\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"h3\", 6);\n      i0.ɵɵtext(7, \"Login\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 7)(9, \"form\", 8);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_9_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(10, \"div\", 9)(11, \"div\", 10);\n      i0.ɵɵelement(12, \"span\", 11)(13, \"input\", 12);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(14, LoginComponent_small_14_Template, 2, 0, \"small\", 13);\n      i0.ɵɵelementStart(15, \"div\", 9)(16, \"div\", 10);\n      i0.ɵɵelement(17, \"span\", 14)(18, \"input\", 15);\n      i0.ɵɵelementStart(19, \"button\", 16);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_19_listener() {\n        return ctx.hideShowPass();\n      });\n      i0.ɵɵelement(20, \"span\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(21, LoginComponent_small_21_Template, 2, 0, \"small\", 13);\n      i0.ɵɵelementStart(22, \"div\", 17)(23, \"a\", 18);\n      i0.ɵɵtext(24, \"Forgot password?\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(25, \"button\", 19);\n      i0.ɵɵtext(26, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"div\", 20);\n      i0.ɵɵtext(28, \"Don't have an account? \");\n      i0.ɵɵelementStart(29, \"a\", 21);\n      i0.ɵɵtext(30, \"Sign up\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(31, \"div\", 22)(32, \"div\", 23)(33, \"a\", 24);\n      i0.ɵɵelement(34, \"img\", 25);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"a\", 26);\n      i0.ɵɵelement(36, \"img\", 27);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(37, \"a\", 28);\n      i0.ɵɵelement(38, \"img\", 29);\n      i0.ɵɵelementEnd()()()()()()()();\n      i0.ɵɵelementStart(39, \"div\", 30)(40, \"div\", 31)(41, \"div\", 32)(42, \"div\", 33)(43, \"p\", 34)(44, \"span\", 35);\n      i0.ɵɵtext(45, \"Forget your password?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(46, \"br\");\n      i0.ɵɵelementStart(47, \"small\");\n      i0.ɵɵtext(48, \"Please provide your E-mail we will send the reset link\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(49, \"button\", 36);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(50, \"div\", 37)(51, \"div\", 9)(52, \"div\", 10);\n      i0.ɵɵelement(53, \"span\", 11);\n      i0.ɵɵelementStart(54, \"input\", 38);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_54_listener($event) {\n        return ctx.resetPasswordEmail = $event;\n      })(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_54_listener($event) {\n        return ctx.checkValidEmail($event);\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(55, LoginComponent_small_55_Template, 2, 0, \"small\", 13);\n      i0.ɵɵtemplate(56, LoginComponent_small_56_Template, 2, 0, \"small\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(57, \"div\", 39)(58, \"button\", 40);\n      i0.ɵɵtext(59, \"Close\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(60, \"button\", 41);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_60_listener() {\n        return ctx.confirmToReset();\n      });\n      i0.ɵɵtext(61, \"Send\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassProp(\"error\", ctx.loginForm.controls[\"username\"].dirty && ctx.loginForm.hasError(\"required\", \"username\"));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls[\"username\"].dirty && ctx.loginForm.hasError(\"required\", \"username\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassProp(\"error\", ctx.loginForm.controls[\"password\"].dirty && ctx.loginForm.hasError(\"required\", \"password\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"type\", ctx.type);\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassMapInterpolate1(\"fa \", ctx.eyeIcon, \"\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls[\"password\"].dirty && ctx.loginForm.hasError(\"required\", \"password\"));\n      i0.ɵɵadvance(33);\n      i0.ɵɵproperty(\"ngModel\", ctx.resetPasswordEmail);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.resetPasswordEmail);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isValidEmail && ctx.resetPasswordEmail);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"disabled\", !(ctx.isValidEmail && ctx.resetPasswordEmail));\n    }\n  },\n  dependencies: [i7.NgIf, i4.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i1.NgModel],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","ValidateForm","i0","LoginComponent","constructor","fb","toast","auth","router","userStore","resetPasswordService","ngOnInit","loginForm","group","username","required","password","localStorage","removeItem","hideShowPass","isText","eyeIcon","type","onSubmit","valid","console","log","value","signIn","subscribe","next","res","reset","navigate","success","detail","summary","duration","storeToken","accessToken","storeRefreshToken","refreshToken","decodedValue","decodedToken","storeFullName","name","storeRole","role","error","validateAllFormFields","checkValidEmail","event","pattern","isValidEmail","test","confirmToReset","resetPasswordEmail","sendResetPasswordLink","buttonRef","document","getElementById","click","err","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\New folder\\IndiawishFrontend\\src\\app\\components\\login\\login.component.ts","D:\\New folder\\IndiawishFrontend\\src\\app\\components\\login\\login.component.html"],"sourcesContent":["import { UserStoreService } from './../../services/user-store.service';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from './../../services/auth.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NgToastService } from 'ng-angular-popup';\r\nimport ValidateForm from 'src/app/helpers/validateform';\r\nimport { ResetPasswordService } from 'src/app/services/reset-password.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  public loginForm!: FormGroup;\r\n  type: string = 'password';\r\n  isText: boolean = false;\r\n  eyeIcon: string = 'fa-eye-slash';\r\n  resetPasswordEmail!: string;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private toast: NgToastService,\r\n    private auth: AuthService,\r\n    private router: Router,\r\n    private userStore: UserStoreService,\r\n    private resetPasswordService: ResetPasswordService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.loginForm = this.fb.group({\r\n      username: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n    });\r\n    localStorage.removeItem('token')\r\n  }\r\n\r\n  hideShowPass() {\r\n    this.isText = !this.isText;\r\n    this.isText ? (this.eyeIcon = 'fa-eye') : (this.eyeIcon = 'fa-eye-slash');\r\n    this.isText ? (this.type = 'text') : (this.type = 'password');\r\n  }\r\n  onSubmit() {\r\n    if (this.loginForm.valid) {\r\n      console.log(this.loginForm.value);\r\n      this.auth.signIn(this.loginForm.value).subscribe({\r\n        next: (res) => {\r\n          console.log(res);\r\n          this.loginForm.reset();\r\n          this.router.navigate(['dashboard']);\r\n          this.toast.success({\r\n            detail: 'Success',\r\n            summary: 'Login Success',\r\n            duration: 5000,\r\n          });\r\n          this.auth.storeToken(res.accessToken!);\r\n          this.auth.storeRefreshToken(res.refreshToken!);\r\n          let decodedValue = this.auth.decodedToken();\r\n          this.userStore.storeFullName(decodedValue.name);\r\n          this.userStore.storeRole(decodedValue.role);\r\n\r\n        }\r\n      });\r\n    } else {\r\n      this.toast.error({\r\n        detail: 'ERROR',\r\n        summary: 'Please fill all details',\r\n        duration: 5000,\r\n      });\r\n      ValidateForm.validateAllFormFields(this.loginForm);\r\n    }\r\n  }\r\n\r\n  public isValidEmail!: boolean;\r\n  checkValidEmail(event: string) {\r\n    const value = event;\r\n    const pattern = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\r\n    this.isValidEmail = pattern.test(value);\r\n    return this.isValidEmail;\r\n  }\r\n\r\n  confirmToReset() {\r\n    if (this.checkValidEmail(this.resetPasswordEmail)) {\r\n      this.resetPasswordService.sendResetPasswordLink(this.resetPasswordEmail)\r\n        .subscribe({\r\n          next: (res) => {\r\n            const buttonRef = document.getElementById(\"closeBtn\");\r\n            buttonRef?.click();\r\n          },\r\n          error: (err) => {\r\n            this.toast.error({\r\n              detail: 'ERROR',\r\n              summary: 'Something went wrong!',\r\n              duration: 5000,\r\n            });\r\n          }\r\n        })\r\n    }\r\n  }\r\n}\r\n","<div class=\"outer\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"offset-md-2 col-lg-5 col-md-7 offset-lg-4 offset-md-3\">\r\n                <div class=\"panel border bg-white\">\r\n                    <div class=\"panel-heading\">\r\n                        <h3 class=\"pt-3 font-weight-bold\">Login</h3>\r\n                    </div>\r\n                    <div class=\"panel-body p-3\">\r\n                        <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n                            <div class=\"form-group pt-3\">\r\n                                <div class=\"input-field\" [class.error]=\"loginForm.controls['username'].dirty && loginForm.hasError('required','username')\"> <span class=\"fa fa-user p-2\"></span> <input formControlName=\"username\" type=\"text\" placeholder=\"Username\" required> </div>\r\n                            </div>\r\n                            <small *ngIf=\"loginForm.controls['username'].dirty && loginForm.hasError('required','username')\" class=\"text-danger\">*Username is required*</small>\r\n                            <div class=\"form-group pt-3\">\r\n                                <div class=\"input-field\" [class.error]=\"loginForm.controls['password'].dirty && loginForm.hasError('required','password')\"> <span class=\"fa fa-lock px-2\"></span> <input formControlName=\"password\" [type]=\"type\" placeholder=\"Password\"> <button type=\"button\" (click)=\"hideShowPass()\" class=\"bg-white text-muted\"> <span class=\"fa {{eyeIcon}}\"></span> </button>                                    </div>\r\n                            </div>\r\n                            <small *ngIf=\"loginForm.controls['password'].dirty && loginForm.hasError('required','password')\" class=\"text-danger\">*Password is required*</small>\r\n                            <div class=\"form-inline fr mt-4\"> <a id=\"forgot\" data-bs-toggle=\"modal\" data-bs-target=\"#forget-password\" class=\"font-weight-bold\">Forgot password?</a> </div>\r\n                            <button type=\"submit\" class=\"btn btn-primary btn-block mt-4 w-100\">Login</button>\r\n                            <div class=\"text-center pt-4 text-muted\">Don't have an account? <a id=\"forgot\" href=\"#\" routerLink=\"/signup\">Sign up</a> </div>\r\n                        </form>\r\n                    </div>\r\n                    <div class=\"mx-3 my-2 py-2 bordert\">\r\n                        <div class=\"text-center py-3\">\r\n                            <a href=\"https://wwww.facebook.com\" target=\"_blank\" class=\"px-2\"> <img src=\"https://www.dpreview.com/files/p/articles/4698742202/facebook.jpeg\" alt=\"\"> </a>\r\n                            <a href=\"https://www.google.com\" target=\"_blank\" class=\"px-2\"> <img src=\"https://www.freepnglogos.com/uploads/google-logo-png/google-logo-png-suite-everything-you-need-know-about-google-newest-0.png\" alt=\"\"> </a>\r\n                            <a href=\"https://www.github.com\" target=\"_blank\" class=\"px-2\"> <img src=\"https://www.freepnglogos.com/uploads/512x512-logo-png/512x512-logo-github-icon-35.png\" alt=\"\"> </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"modal fade\" id=\"forget-password\" tabindex=\"-1\" aria-labelledby=\"reset-passwordLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <p class=\"modal-title\" id=\"forget-passwordLabel\"> <span style=\"font-size: 25px;font-weight:700\">Forget your password?</span><br>\r\n                    <small>Please provide your E-mail we will send the reset link</small></p>\r\n\r\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n\r\n            </div>\r\n\r\n            <div class=\"modal-body\">\r\n                <div class=\"form-group pt-3\">\r\n                    <div class=\"input-field\"> <span class=\"fa fa-user p-2\"></span> <input [(ngModel)]=\"resetPasswordEmail\" (ngModelChange)=\"checkValidEmail($event)\" type=\"text\" placeholder=\"Email\"> </div>\r\n                </div>\r\n                <small *ngIf=\"!resetPasswordEmail\" class=\"text-danger\">*Email is required*</small>\r\n                <small *ngIf=\"!isValidEmail && resetPasswordEmail\" class=\"text-danger\">*Email is invalid*</small>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" id=\"closeBtn\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n                <button (click)=\"confirmToReset()\" [disabled]=\"!(isValidEmail && resetPasswordEmail)\" type=\"button\" class=\"btn btn-primary\">Send</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}