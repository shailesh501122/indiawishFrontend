{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class UserStoreService {\n  constructor() {\n    this.fullName$ = new BehaviorSubject(\"\");\n    this.role$ = new BehaviorSubject(\"\");\n  }\n  getFullName() {\n    return this.fullName$.asObservable();\n  }\n  storeFullName(fullname) {\n    this.fullName$.next(fullname);\n  }\n  getRole() {\n    return this.role$.asObservable();\n  }\n  storeRole(role) {\n    this.role$.next(role);\n  }\n}\nUserStoreService.ɵfac = function UserStoreService_Factory(t) {\n  return new (t || UserStoreService)();\n};\nUserStoreService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserStoreService,\n  factory: UserStoreService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAASA,eAAe,QAAoB,MAAM;;AAKlD,OAAM,MAAOC,gBAAgB;EAG3BC;IAFQ,cAAS,GAAG,IAAIF,eAAe,CAAS,EAAE,CAAC;IAC3C,UAAK,GAAG,IAAIA,eAAe,CAAS,EAAE,CAAC;EAE/C;EAEOG,WAAW;IAChB,OAAO,IAAI,CAACC,SAAS,CAACC,YAAY,EAAE;EACtC;EAEOC,aAAa,CAACC,QAAe;IAClC,IAAI,CAACH,SAAS,CAACI,IAAI,CAACD,QAAQ,CAAC;EAC/B;EAEOE,OAAO;IACZ,OAAO,IAAI,CAACC,KAAK,CAACL,YAAY,EAAE;EAClC;EAEOM,SAAS,CAACC,IAAW;IAC1B,IAAI,CAACF,KAAK,CAACF,IAAI,CAACI,IAAI,CAAC;EACvB;;AApBWX,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAAY,SAAhBZ,gBAAgB;EAAAa,YAFf;AAAM","names":["BehaviorSubject","UserStoreService","constructor","getFullName","fullName$","asObservable","storeFullName","fullname","next","getRole","role$","storeRole","role","factory","providedIn"],"sourceRoot":"","sources":["D:\\New folder\\IndiawishFrontend\\src\\app\\services\\user-store.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserStoreService {\r\n  private fullName$ = new BehaviorSubject<string>(\"\");\r\n  private role$ = new BehaviorSubject<string>(\"\");\r\n  constructor() {\r\n  }\r\n\r\n  public getFullName():Observable<string>{\r\n    return this.fullName$.asObservable();\r\n  }\r\n\r\n  public storeFullName(fullname:string){\r\n    this.fullName$.next(fullname);\r\n  }\r\n\r\n  public getRole():Observable<string>{\r\n    return this.role$.asObservable();\r\n  }\r\n\r\n  public storeRole(role:string){\r\n    this.role$.next(role)\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}