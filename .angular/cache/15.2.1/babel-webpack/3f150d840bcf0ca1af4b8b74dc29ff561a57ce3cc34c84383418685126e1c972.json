{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"ng-angular-popup\";\nimport * as i3 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(auth, toast, router) {\n    this.auth = auth;\n    this.toast = toast;\n    this.router = router;\n  }\n  canActivate() {\n    if (this.auth.isLoggedIn()) {\n      return true;\n    } else {\n      this.router.navigate(['/']);\n      this.toast.error({\n        detail: 'ERROR',\n        summary: \"Please Login first!\",\n        duration: 5000\n      });\n      return false;\n    }\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.NgToastService), i0.ɵɵinject(i3.Router));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;;AAeA,OAAM,MAAOA,SAAS;EACpBC,YACUC,IAAiB,EACjBC,KAAqB,EACrBC,MAAc;IAFd,SAAI,GAAJF,IAAI;IACJ,UAAK,GAALC,KAAK;IACL,WAAM,GAANC,MAAM;EACZ;EACJC,WAAW;IACT,IAAI,IAAI,CAACH,IAAI,CAACI,UAAU,EAAE,EAAE;MAC1B,OAAO,IAAI;KACZ,MAAM;MACL,IAAI,CAACF,MAAM,CAACG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;MAC3B,IAAI,CAACJ,KAAK,CAACK,KAAK,CAAC;QAAEC,MAAM,EAAE,OAAO;QAAEC,OAAO,EAAE,qBAAqB;QAAEC,QAAQ,EAAE;MAAI,CAAE,CAAC;MACrF,OAAO,KAAK;;EAEhB;;AAdWX,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;SAATA,SAAS;EAAAY,SAATZ,SAAS;EAAAa,YAFR;AAAM","names":["AuthGuard","constructor","auth","toast","router","canActivate","isLoggedIn","navigate","error","detail","summary","duration","factory","providedIn"],"sourceRoot":"","sources":["D:\\New folder\\AngularAuthUI\\src\\app\\guards\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  Router,\r\n  RouterStateSnapshot,\r\n  UrlTree,\r\n} from '@angular/router';\r\nimport { NgToastService } from 'ng-angular-popup';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(\r\n    private auth: AuthService,\r\n    private toast: NgToastService,\r\n    private router: Router\r\n  ) { }\r\n  canActivate(): boolean {\r\n    if (this.auth.isLoggedIn()) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/'])\r\n      this.toast.error({ detail: 'ERROR', summary: \"Please Login first!\", duration: 5000 });\r\n      return false\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}